openapi: "3.0.0"
info:
  version: 1.0.0
  title: Products API
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /products/{productID}:
    get:
      summary: Get product detail by id
      operationId: getProduct
      parameters:
        - in: path
          name: productID
          schema:
            type: integer
          required: true
          description: Numeric ID of the product to get
      responses:
        "200":
          description: Returns product data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProductResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProductResponse"
    patch:
      summary: Update product data
      operationId: updateProduct
      parameters:
        - in: path
          name: productID
          schema:
            type: integer
          required: true
          description: Numeric ID of the product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductRequest"
      responses:
        "200":
          description: Update product response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProductResponse"
        "400":
          description: Invalid params
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProductResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProductResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProductResponse"
    delete:
      summary: Delete product data
      operationId: deleteProduct
      parameters:
        - in: path
          name: productID
          schema:
            type: integer
          required: true
          description: Numeric ID of the product
      responses:
        "200":
          description: Delete product response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProductResponse"
        "400":
          description: Invalid params
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProductResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProductResponse"
  /products:
    post:
      summary: Add a new product
      operationId: addProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddProductRequest"
      responses:
        "200":
          description: Add product response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddProductResponse"
        "400":
          description: Invalid params
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddProductResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddProductResponse"
components:
  schemas:
    AddProductRequest:
      $ref: "#/components/schemas/Product"
    AddProductResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
        product_id:
          type: integer
        error:
          $ref: "#/components/schemas/ErrorResponse"
        validation:
          $ref: "#/components/schemas/ValidationProductResult"
    ValidationProductResult:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        rating:
          type: string
        details:
          $ref: "#/components/schemas/ValidationProductDetailResult"
    ValidationProductDetailResult:
      type: object
      properties:
        price:
          type: string
        stock:
          type: string
    GetProductResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
        error:
          $ref: "#/components/schemas/ErrorResponse"
        data:
          $ref: "#/components/schemas/Product"
    UpdateProductRequest:
      $ref: "#/components/schemas/Product"
    UpdateProductResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
        error:
          $ref: "#/components/schemas/ErrorResponse"
        validation:
          $ref: "#/components/schemas/ValidationProductResult"
    DeleteProductResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
        error:
          $ref: "#/components/schemas/ErrorResponse"
    Product:
      type: object
      required:
        - name
        - description
        - details
      properties:
        product_id:
          type: integer
        name:
          type: string
        description:
          type: string
        rating:
          type: number
        details:
          type: array
          items:
            $ref: "#/components/schemas/ProductDetail"
    ProductDetail:
      type: object
      required:
        - stock
        - price
      properties:
        variety_id:
          type: integer
        variant:
          type: string
        stock:
          type: integer
        price:
          type: number
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
